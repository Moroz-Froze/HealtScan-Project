import { useState } from 'react';

export default function App() {
  const [result, setResult] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [imagePreview, setImagePreview] = useState('');

  const backendUrl = import.meta.env.VITE_BACKEND_URL || 'http://localhost:8000';

  const handleFileChange = async (e) => {
    const file = e.target.files?.[0];
    if (!file) return;

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–≤—å—é
    const reader = new FileReader();
    reader.onload = () => setImagePreview(reader.result);
    reader.readAsDataURL(file);

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    const formData = new FormData();
    formData.append('image', file);

    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å
    setLoading(true);
    setError('');
    setResult(null);

    try {
      const response = await fetch(`${backendUrl}/predict`, {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`);
      }

      const data = await response.json();
      setResult(data);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞:', err);
      setError(err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <h1>üîç SkinWound AI</h1>
      <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –∫–æ–∂–Ω–æ–π —Ä–∞–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</p>

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <label className="upload-area">
        <span className="upload-text">
          {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : 'üìé –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ'}
        </span>
        <input
          type="file"
          accept="image/*"
          onChange={handleFileChange}
          disabled={loading}
        />
      </label>

      {/* –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      {imagePreview && (
        <div style={{ marginBottom: '20px' }}>
          <img
            src={imagePreview}
            alt="Preview"
            style={{
              maxWidth: '100%',
              maxHeight: '200px',
              borderRadius: '8px',
              border: '1px solid #ddd',
            }}
          />
        </div>
      )}

      {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {loading && <p className="loading">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...</p>}

      {/* –û—à–∏–±–∫–∞ */}
      {error && <p className="error">‚ö†Ô∏è {error}</p>}

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
      {result && (
        <div className="result">
          <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞</h3>
          <p><strong>–¢–∏–ø –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è:</strong> {result.class}</p>
          <p><strong>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:</strong> {(result.confidence * 100).toFixed(2)}%</p>
          <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong> {result.advice}</p>
        </div>
      )}
    </div>
  );
}