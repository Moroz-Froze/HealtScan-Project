// src/App.jsx
import React, { useState } from 'react';
import './App.css';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const HomePage = ({ onNavigate }) => {
  const [queryHistory] = useState([
    { id: 1, query: '–£–∫—É—Å —Å–ª–µ–ø–Ω—è', icon: 'üîç' },
    { id: 2, query: '–£–∫—É—Å –∫–æ–º–∞—Ä–∞', icon: 'üîç' },
    { id: 3, query: '–•–∏–º–∏—á–µ—Å–∫–∏–π –æ–∂–æ–≥', icon: 'üîç' }
  ]);

  const handleScan = () => {
    onNavigate('loading');
  };

  const handleUploadImage = () => {
    onNavigate('upload');
  };

  const handleReferenceLiterature = () => {
    onNavigate('literature');
  };

  const handleSubscribe = () => {
    onNavigate('subscription');
  };

  return (
    <div className="zdrav-scan-app">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="header">
        <div className="welcome-text">
          <span>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ </span>
        </div>
        
        {/* –õ–æ–≥–æ—Ç–∏–ø –ó–¥—Ä–∞–≤–°–∫–∞–Ω */}
        <div className="logo-container">
          <div className="text-logo">–ó–¥—Ä–∞–≤–°–∫–∞–Ω!</div>
        </div>
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ */}
      <div className="query-history">
        <div className="history-title">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤</div>
        <div className="history-list">
          {queryHistory.map((item) => (
            <div key={item.id} className="history-item">
              <span className="history-icon">
                <img src="/images/–õ—É–ø–∞.svg" alt="–õ—É–ø–∞" className="history-icon-svg" />
              </span>
              <span className="history-text">{item.query}</span>
            </div>
          ))}
        </div>
      </div>

      {/* –ü–æ–¥–ø–∏—Å–∫–∞ */}
      <div className="subscription-section">
        <button className="subscribe-button" onClick={handleSubscribe}>
          <span className="subscribe-text">–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</span>
          <span className="subscribe-icon">
            <img src="/images/–ö—Ä–µ–¥–∏—Ç–∫–∏.svg" alt="–ö—Ä–µ–¥–∏—Ç–∫–∏" className="credit-icon-svg" />
          </span>
        </button>
        <div className="subscription-status">–ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞ 17.07.2025 –≥.</div>
      </div>

      {/* –†–µ–∫–ª–∞–º–∞ */}
      <div className="advertisement">
        <img src="/images/Group 3.svg" alt="–†–µ–∫–ª–∞–º–∞" className="ad-image" />
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
      <div className="main-actions">
        <button className="scan-button" onClick={handleScan}>
          <div className="scan-icon">
            <img src="/images/–ö–Ω–æ–ø–∫–∞ —Å–∫–∞–Ω –∫–≤–∞–¥—Ä–∞—Ç —Å –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞.svg" alt="–°–∫–∞–Ω" className="scan-icon-svg" />
          </div>
        </button>
        
        <div className="side-buttons">
          <button className="upload-button" onClick={handleUploadImage}>
            <span className="upload-text">–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</span>
            <span className="upload-icon">
              <img src="/images/–ì–∞–ª–µ—Ä–µ—è.svg" alt="–ì–∞–ª–µ—Ä–µ—è" className="upload-icon-svg" />
            </span>
          </button>
          
          <button className="literature-button" onClick={handleReferenceLiterature}>
            <span className="literature-text">–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞</span>
            <span className="literature-icon">
              <img src="/images/–î–æ–∫—É–º–µ–Ω—Ç—ã.svg" alt="–î–æ–∫—É–º–µ–Ω—Ç—ã" className="literature-icon-head-svg" />
            </span>
          </button>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∫–∏
const LoadingPage = ({ onNavigate }) => {
  return (
    <div className="loading-page">
      <div className="loading-logo">
        <img src="/images/–ª–æ–≥–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –∑–¥—Ä–∞–≤—Å–∫–∞–Ω.svg" alt="–ó–¥—Ä–∞–≤–°–∫–∞–Ω" className="loading-logo-svg" />
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const UploadPage = ({ onNavigate }) => {
  const [selectedImage, setSelectedImage] = useState(null);

  const handleFileSelect = (event) => {
    const file = event.target.files[0];
    if (file) {
      const imageUrl = URL.createObjectURL(file);
      setSelectedImage(imageUrl);
    }
  };

  const handleTakePhoto = () => {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = 'image/*';
    input.capture = 'environment';
    input.onchange = handleFileSelect;
    input.click();
  };

  const handleScan = () => {
    if (selectedImage) {
      onNavigate('loading');
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—à–∏–±–∫–∏
      setTimeout(() => {
        // –°–ª—É—á–∞–π–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        const shouldError = Math.random() < 0.3; // 30% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏
        if (shouldError) {
          onNavigate('error');
        } else {
          onNavigate('scanner', { image: selectedImage });
        }
      }, 2000);
    }
  };

  return (
    <div className="upload-page">
      
      {!selectedImage ? (
        <div className="upload-options">
          <button className="upload-option" onClick={handleTakePhoto}>
            <div className="upload-icon-large">üì∑</div>
            <span>–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ</span>
          </button>
          <button className="upload-option" onClick={() => document.getElementById('file-input').click()}>
            <div className="upload-icon-large">üìÅ</div>
            <span>–í—ã–±—Ä–∞—Ç—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏</span>
          </button>
          <input
            id="file-input"
            type="file"
            accept="image/*"
            onChange={handleFileSelect}
            style={{ display: 'none' }}
          />
        </div>
      ) : (
        <div className="image-preview">
          <img src={selectedImage} alt="Preview" className="preview-image" />
          <div className="scan-overlay">
            <div className="scan-frame"></div>
          </div>
          <button className="scan-button-large" onClick={handleScan}>
            <div className="scan-icon-large">
              <img src="/images/–õ—É–ø–∞.svg" alt="–õ—É–ø–∞" className="scan-icon-lupa-svg" />
            </div>
            <span>–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å</span>
          </button>
        </div>
      )}
      
      <button className="back-button" onClick={() => onNavigate('home')}>
        ‚Üê –ù–∞–∑–∞–¥
      </button>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∫–∞–Ω–µ—Ä–∞
const ScannerPage = ({ image, onNavigate }) => {
  const [analysisResult] = useState({
    condition: '–£–∫—É—Å —Å–ª–µ–ø–Ω—è',
    description: '–í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ —É–∫—É—Å —Å–ª–µ–ø–Ω—è –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ–ø—Ä–∏—è—Ç–µ–Ω, –Ω–æ –Ω–µ –æ–ø–∞—Å–µ–Ω. –û–¥–Ω–∞–∫–æ –ø—Ä–∏ —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏ –∫ –∞–ª–ª–µ—Ä–≥–∏–∏ –∏–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É–∫—É—Å–∞—Ö –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É.',
    recommendations: [
      '–ü—Ä–æ–º–æ–π—Ç–µ –º–µ—Å—Ç–æ —É–∫—É—Å–∞ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥–æ–π',
      '–ü—Ä–∏–ª–æ–∂–∏—Ç–µ –ª–µ–¥ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –æ—Ç–µ–∫–∞',
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –ø—Ä–∏ –∞–ª–ª–µ—Ä–≥–∏–∏',
      '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É –ø—Ä–∏ —Å–∏–ª—å–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏'
    ]
  });

  return (
    <div className="scanner-page">
      
      {/* –õ–æ–≥–æ—Ç–∏–ø */}
      <div className="scanner-logo">
        <img src="/images/–ú–∏–Ω–∏  –ª–æ–≥–æ –∑–¥—Ä–∞–≤—Å–∫–∞–Ω —Å–∏–Ω–∏–π –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∫–∞–Ω–µ—Ä–∞.svg" alt="–ó–¥—Ä–∞–≤–°–∫–∞–Ω" className="scanner-logo-svg" />
      </div>
      
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º */}
      <div className="image-analysis">
        <div className="image-container">
          <img src={image} alt="Analyzed" className="analysis-image" />
          <div className="scan-overlay">
            <img src="/images/–†–∞–º–∫–∏ —Å–∫–∞–Ω–µ—Ä–∞.svg" alt="–†–∞–º–∫–∞ —Å–∫–∞–Ω–µ—Ä–∞" className="scan-frame-svg" />
          </div>
        </div>
        
        <div className="analysis-result">
          <div className="result-label">–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏</div>
          <div className="result-condition">{analysisResult.condition}</div>
          <div className="result-description">{analysisResult.description}</div>
          
          <div className="recommendations">
            <h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h3>
            <ul>
              {analysisResult.recommendations.map((rec, index) => (
                <li key={index}>{rec}</li>
              ))}
            </ul>
          </div>
        </div>
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="scanner-navigation">
        <button className="nav-button" onClick={() => onNavigate('upload')}>
          ‚Üê
        </button>
        <button className="nav-button home" onClick={() => onNavigate('home')}>
          <div className="home-icon">üè†</div>
        </button>
        <button className="nav-button scan" onClick={() => onNavigate('upload')}>
          <img src="/images/–ö–Ω–æ–ø–∫–∞ –∑–∞–¥—Ä–∞–≤—Å–∫–∞–Ω –ø–æ—Å—Ç–æ—è—è–Ω–Ω–∞—è –≤–Ω–∏–∑.svg" alt="–ó–¥—Ä–∞–≤–°–∫–∞–Ω" className="nav-scan-svg" />
        </button>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã
const LiteraturePage = ({ onNavigate }) => {
  const [literatureItems] = useState([
    {
      id: 1,
      title: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏–∏',
      icon: '/images/–î–æ–∫—É–º–µ–Ω—Ç—ã.svg'
    },
    {
      id: 2,
      title: '–ò–Ω—Å–µ–∫—Ç–Ω–∞—è –∞–ª–ª–µ—Ä–≥–∏—è: –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ',
      icon: '/images/–î–æ–∫—É–º–µ–Ω—Ç—ã.svg'
    },
    {
      id: 3,
      title: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–µ–æ—Ç–ª–æ–∂–Ω–æ–π –ø–æ–º–æ—â–∏ –ø—Ä–∏ —É–∫—É—Å–∞—Ö –Ω–∞—Å–µ–∫–æ–º—ã—Ö',
      icon: '/images/–î–æ–∫—É–º–µ–Ω—Ç—ã.svg'
    },
    {
      id: 4,
      title: '–ö–∞—Ä–∏–µ—Å –∑—É–±–æ–≤: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
      icon: '/images/–î–æ–∫—É–º–µ–Ω—Ç—ã.svg'
    },
    {
      id: 5,
      title: '–ê–ª–ª–µ—Ä–≥–æ–ª–æ–≥–∏—è –∏ –∏–º–º—É–Ω–æ–ª–æ–≥–∏—è',
      icon: '/images/–î–æ–∫—É–º–µ–Ω—Ç—ã.svg'
    }
  ]);

  const handleLiteratureClick = (item) => {
    console.log('–û—Ç–∫—Ä—ã—Ç—å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É:', item.title);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã
  };

  return (
    <div className="literature-page">
      <div className="literature-header">
        <h1>–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞</h1>
      </div>
      
      <div className="literature-list">
        {literatureItems.map((item) => (
          <button
            key={item.id}
            className="literature-item"
            onClick={() => handleLiteratureClick(item)}
          >
            <span className="literature-item-icon">
              <img src={item.icon} alt="–î–æ–∫—É–º–µ–Ω—Ç" className="literature-icon-svg" />
            </span>
            <span className="literature-item-title">{item.title}</span>
          </button>
        ))}
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="scanner-navigation">
        <button className="nav-button" onClick={() => onNavigate('home')}>
          ‚Üê
        </button>
        <button className="nav-button home" onClick={() => onNavigate('home')}>
          üè†
        </button>
        <button className="nav-button scan" onClick={() => onNavigate('upload')}>
          <img src="/images/–ö–Ω–æ–ø–∫–∞ –∑–∞–¥—Ä–∞–≤—Å–∫–∞–Ω –ø–æ—Å—Ç–æ—è—è–Ω–Ω–∞—è –≤–Ω–∏–∑.svg" alt="–ó–¥—Ä–∞–≤–°–∫–∞–Ω" className="nav-scan-svg" />
        </button>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–ø–∏—Å–∫–∏
const SubscriptionPage = ({ onNavigate }) => {
  const [selectedPlan, setSelectedPlan] = useState('express');

  const handleTrialSubscribe = () => {
    console.log('–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
  };

  const handleSubscribe = () => {
    console.log('–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:', selectedPlan);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
  };

  return (
    <div className="subscription-page">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="subscription-header">
        <h1>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞</h1>
        <div className="subscription-app-name">–ó–¥—Ä–∞–≤–°–∫–∞–Ω</div>
      </div>

      {/* –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ */}
      <div className="trial-section">
        <h2>–•–æ—Ç–∏—Ç–µ —É–±–µ–¥–∏—Ç—å—Å—è –≤ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ó–¥—Ä–∞–≤–°–∫–∞–Ω –ª–∏—á–Ω–æ?</h2>
        <div className="trial-highlight">–ø–æ–ø—Ä–æ–±—É–π 7 –¥–Ω–µ–π –ë–ï–°–ü–õ–ê–¢–ù–û</div>
        <p className="trial-description">
          –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è. 
          –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.
        </p>
        <button className="trial-button" onClick={handleTrialSubscribe}>
          –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
        </button>
      </div>

      {/* –ü–ª–∞—Ç–Ω—ã–µ –ø–ª–∞–Ω—ã */}
      <div className="plans-section">
        <div className="plan-options">
          <label className="plan-option">
            <input
              type="radio"
              name="plan"
              value="express"
              checked={selectedPlan === 'express'}
              onChange={(e) => setSelectedPlan(e.target.value)}
            />
            <div className="plan-content">
              <div className="plan-name">–≠–∫—Å–ø—Ä–µ—Å—Å-–ø—Ä–æ–≤–µ—Ä–∫–∞</div>
              <div className="plan-duration">(–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü)</div>
              <div className="plan-price">229‚ÇΩ</div>
            </div>
          </label>

          <label className="plan-option">
            <input
              type="radio"
              name="plan"
              value="quarter"
              checked={selectedPlan === 'quarter'}
              onChange={(e) => setSelectedPlan(e.target.value)}
            />
            <div className="plan-content">
              <div className="plan-name">–¢—Ä–∏–º–µ—Å—Ç—Ä –∑–¥–æ—Ä–æ–≤—å—è</div>
              <div className="plan-duration">(–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞)</div>
              <div className="plan-price">749‚ÇΩ</div>
            </div>
          </label>

          <label className="plan-option">
            <input
              type="radio"
              name="plan"
              value="annual"
              checked={selectedPlan === 'annual'}
              onChange={(e) => setSelectedPlan(e.target.value)}
            />
            <div className="plan-content">
              <div className="plan-name">–ì–æ–¥–æ–≤–æ–π –∏–º–º—É–Ω–∏—Ç–µ—Ç</div>
              <div className="plan-duration">(–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤)</div>
              <div className="plan-price">2499‚ÇΩ</div>
            </div>
          </label>
        </div>

        <div className="legal-text">
          –ü–æ–¥–ø–∏—Å—ã–≤–∞—è—Å—å, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. 
          –ü–æ–¥–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ 
          App Store/Google Play. –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å 
          –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.
        </div>

        <button className="subscribe-button-large" onClick={handleSubscribe}>
          –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
        </button>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="scanner-navigation">
        <button className="nav-button" onClick={() => onNavigate('home')}>
          ‚Üê
        </button>
        <button className="nav-button home" onClick={() => onNavigate('home')}>
          üè†
        </button>
        <button className="nav-button scan" onClick={() => onNavigate('upload')}>
          <img src="/images/–ö–Ω–æ–ø–∫–∞ –∑–∞–¥—Ä–∞–≤—Å–∫–∞–Ω –ø–æ—Å—Ç–æ—è—è–Ω–Ω–∞—è –≤–Ω–∏–∑.svg" alt="–ó–¥—Ä–∞–≤–°–∫–∞–Ω" className="nav-scan-svg" />
        </button>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –ø–æ–¥–ø–∏—Å–∫–µ
const SubscriptionPromptPage = ({ onNavigate }) => {
  const handleSubscribe = () => {
    onNavigate('subscription');
  };

  return (
    <div className="subscription-prompt-page">
      <div className="prompt-content">
        <div className="prompt-text">
          <div className="prompt-line">–ü—Å—Å—Å......</div>
          <div className="prompt-line">–∫–∞–∂–µ—Ç—Å—è —É —Ç–µ–±—è –Ω–µ—Ç</div>
          <div className="prompt-line highlight">–ø–æ–¥–ø–∏—Å–∫–∏ :(</div>
        </div>
        
        <div className="prompt-description">
          –ß—Ç–æ –±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è <span className="highlight">–ó–¥—Ä–∞–≤–°–∫–∞–Ω–æ–º</span> —Å–Ω–∞—á–∞–ª–∞ –æ—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É –∏–ª–∏ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
        </div>
        
        <button className="prompt-subscribe-button" onClick={handleSubscribe}>
          <span>–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</span>
          <span className="card-icon">üí≥</span>
        </button>
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="scanner-navigation">
        <button className="nav-button" onClick={() => onNavigate('home')}>
          ‚Üê
        </button>
        <button className="nav-button home" onClick={() => onNavigate('home')}>
          üè†
        </button>
        <button className="nav-button scan" onClick={() => onNavigate('upload')}>
          <img src="/images/–ö–Ω–æ–ø–∫–∞ –∑–∞–¥—Ä–∞–≤—Å–∫–∞–Ω –ø–æ—Å—Ç–æ—è—è–Ω–Ω–∞—è –≤–Ω–∏–∑.svg" alt="–ó–¥—Ä–∞–≤–°–∫–∞–Ω" className="nav-scan-svg" />
        </button>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–∫–∏
const ErrorPage = ({ onNavigate }) => {
  return (
    <div className="error-page">
      <div className="error-content">
        <h1 className="error-title">–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...</h1>
        <p className="error-message">
          –°–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.
        </p>
      </div>
      
      <button className="back-button error-back" onClick={() => onNavigate('home')}>
        ‚Üê
      </button>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const ZdravScanApp = () => {
  const [currentPage, setCurrentPage] = useState('home');
  const [pageData, setPageData] = useState({});

  const handleNavigate = (page, data = {}) => {
    setCurrentPage(page);
    setPageData(data);
  };

  const renderPage = () => {
    switch (currentPage) {
      case 'home':
        return <HomePage onNavigate={handleNavigate} />;
      case 'loading':
        return <LoadingPage onNavigate={handleNavigate} />;
      case 'upload':
        return <UploadPage onNavigate={handleNavigate} />;
      case 'scanner':
        return <ScannerPage image={pageData.image} onNavigate={handleNavigate} />;
      case 'literature':
        return <LiteraturePage onNavigate={handleNavigate} />;
      case 'subscription':
        return <SubscriptionPage onNavigate={handleNavigate} />;
      case 'subscription-prompt':
        return <SubscriptionPromptPage onNavigate={handleNavigate} />;
      case 'error':
        return <ErrorPage onNavigate={handleNavigate} />;
      default:
        return <HomePage onNavigate={handleNavigate} />;
    }
  };

  return (
    <div className="app-container">
      {renderPage()}
    </div>
  );
};

export default ZdravScanApp;